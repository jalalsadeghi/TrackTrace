version: "3.9"

x-base-service: &base-service
  build:
    context: .
    dockerfile: docker/production.Dockerfile
  environment:
    - DATABASE_URL=psql://tta:tta123@db:5432/tracktraceapi
    - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
  volumes:
    - .:/app
  depends_on:
    - db
    - rabbitmq
  restart: on-failure

services:
  db:
    image: postgres:14.1
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=tracktraceapi
      - POSTGRES_USER=tta
      - POSTGRES_PASSWORD=tta123

  rabbitmq:
    image: "rabbitmq:alpine"
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  django:
    <<: *base-service
    container_name: django
    command: ./docker/web_entrypoint.sh
    ports:
      - "8000:8000"

  celery:
    <<: *base-service
    container_name: worker
    command: ./docker/celery_entrypoint.sh

  beats:
    <<: *base-service
    container_name: beats
    command: ./docker/beats_entrypoint.sh

  nginx:
    build:
      context: ./docker/nginx
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - django
    restart: always
